name: CI

on: [push]

jobs:

  server:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - uses: actions/cache@v1
      with:
        path: ~/.cache/coursier/v1
        key: ${{ runner.os }}-coursier-${{ hashFiles('**/build.sc') }}

    - uses: olafurpg/setup-scala@v7
      with:
        java-version: graalvm-ce-java11@20.1.0

    - name: Build jar
      run: ./mill server.assembly

    - name: Build binary (GraalVM native-image)
      run: |
        gu install native-image
        ./mill server.nativeImage

    - name: Deploy server
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        heroku container:login
        heroku container:push --app bittorrent-server web
        heroku container:release --app bittorrent-server web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

  webapp:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-coursier-${{ hashFiles('**/build.sc') }}

      - uses: actions/cache@v1
        id: npm-cache
        with:
          path: webapp/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}

      - uses: olafurpg/setup-scala@v7
        with:
          java-version: graalvm@

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
        working-directory: ./webapp

      - name: Build webapp
        run: ./mill webapp.package

      - name: Deploy webapp
        uses: peaceiris/actions-gh-pages@v3.6.4
        with:
          deploy_key: ${{ secrets.GH_PAGES_DEPLOY_KEY }}
          external_repository: TorrentDam/TorrentDam.github.io
          publish_branch: gh-pages
          publish_dir: ./out/webapp/package/dest
